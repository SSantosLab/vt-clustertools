;this section will trigger the modules we want to use
;
; To Run: $ python vtpipe.py vtconfig.ini
;
[pipeline]
module_vt = y ;(y/n) run Voronoi Tessellation
module_ma = n ;(y/n) run membership assignment
;module_rs = n ;(y/n) run red sequence measurements
module_sm = n ;(y/n) run stellar masses

;section to define the configs to vt
[vt]
;output catalogs are generated in the working directory now
vt_source_sh = /path/to/the/generated/.sh/file
vt_params = /home/usr/vt-clustertools/vt/example/vtparams.info ; this is params.info
vt_input_galcat = /home/usr/vt-clustertools/vt/example/example_data.fits
ra_box = ;boxes.info
dec_box = ;boxes.info
vt_mfit = /home/usr/vt-clustertools/vt/example/mfit_params.txt
vt_truth = /home/usr/vt-clustertools/vt/example/example_data_truthtable.fits

;this section will have the options for membership assignment
[membership_assign]
ma_cluster_out =
ma_member_out =
ma_source_sh =
ma_params = ; adjusting keywords of the catalog maparams.info
ma_input_clustercat = /home/usr/vt-clustertools/vt/example/example_data.clustercat.fit
ma_input_galcat = /home/usr/vt-clustertools/vt/example/example_data.fits
;ma_input_healpix_galcat = ;
ma_pix_list =
;ma_input_zcat =
;ma_input_colorcat =

;this section will have the red-sequence options if we can split
; Brianâ€™s code
;[red_sequence/restframe?]
;rs_source_sh =

;this section will have the options for stellar mass
[stellar_mass]
sm_cluster_smass_out =
sm_stellar_mass_out =
sm_source_sh =
sm_input_membercat = default = ma_member_out
; Simha directory
batch_start = 0
max_of_batch = 970 ; this is the number of members/(machines to run on)
